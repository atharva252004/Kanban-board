{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\AJ\\\\Downloads\\\\FE_Assignment\\\\kanban-board\\\\src\\\\components\\\\Column.js\";\nimport React from 'react';\nimport Card from './Card';\nimport Icon from './Icon';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getColumnIcon = (grouping, title) => {\n  if (grouping === 'status') {\n    switch (title.toLowerCase()) {\n      case 'backlog':\n        return 'backlog';\n      case 'todo':\n        return 'todo';\n      case 'in progress':\n        return 'in-progress';\n      case 'done':\n        return 'done';\n      case 'canceled':\n        return 'cancelled';\n      default:\n        return 'backlog';\n    }\n  } else if (grouping === 'priority') {\n    switch (title.toLowerCase()) {\n      case 'urgent':\n        return 'urgent-priority';\n      case 'high':\n        return 'high-priority';\n      case 'medium':\n        return 'medium-priority';\n      case 'low':\n        return 'low-priority';\n      case 'no priority':\n        return 'no-priority';\n      default:\n        return 'no-priority';\n    }\n  } else {\n    return 'user'; // Assuming there's a user icon\n  }\n};\nfunction Column({\n  title,\n  tickets,\n  grouping\n}) {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"column-title\",\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: getColumnIcon(grouping, title)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), title, /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"ticket-count\",\n        children: tickets.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), tickets.map(ticket => /*#__PURE__*/_jsxDEV(Card, {\n      ticket: ticket\n    }, ticket.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = Column;\nexport default Column;\nvar _c;\n$RefreshReg$(_c, \"Column\");","map":{"version":3,"names":["React","Card","Icon","jsxDEV","_jsxDEV","getColumnIcon","grouping","title","toLowerCase","Column","tickets","className","children","name","fileName","_jsxFileName","lineNumber","columnNumber","length","map","ticket","id","_c","$RefreshReg$"],"sources":["C:/Users/AJ/Downloads/FE_Assignment/kanban-board/src/components/Column.js"],"sourcesContent":["import React from 'react';\r\nimport Card from './Card';\r\nimport Icon from './Icon';\r\n\r\nconst getColumnIcon = (grouping, title) => {\r\n  if (grouping === 'status') {\r\n    switch (title.toLowerCase()) {\r\n      case 'backlog': return 'backlog';\r\n      case 'todo': return 'todo';\r\n      case 'in progress': return 'in-progress';\r\n      case 'done': return 'done';\r\n      case 'canceled': return 'cancelled';\r\n      default: return 'backlog';\r\n    }\r\n  } else if (grouping === 'priority') {\r\n    switch (title.toLowerCase()) {\r\n      case 'urgent': return 'urgent-priority';\r\n      case 'high': return 'high-priority';\r\n      case 'medium': return 'medium-priority';\r\n      case 'low': return 'low-priority';\r\n      case 'no priority': return 'no-priority';\r\n      default: return 'no-priority';\r\n    }\r\n  } else {\r\n    return 'user'; // Assuming there's a user icon\r\n  }\r\n};\r\n\r\nfunction Column({ title, tickets, grouping }) {\r\n  return (\r\n    <div className=\"column\">\r\n      <h2 className=\"column-title\">\r\n        <Icon name={getColumnIcon(grouping, title)} />\r\n        {title}\r\n        <span className=\"ticket-count\">{tickets.length}</span>\r\n      </h2>\r\n      {tickets.map(ticket => (\r\n        <Card key={ticket.id} ticket={ticket} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Column;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAACC,QAAQ,EAAEC,KAAK,KAAK;EACzC,IAAID,QAAQ,KAAK,QAAQ,EAAE;IACzB,QAAQC,KAAK,CAACC,WAAW,CAAC,CAAC;MACzB,KAAK,SAAS;QAAE,OAAO,SAAS;MAChC,KAAK,MAAM;QAAE,OAAO,MAAM;MAC1B,KAAK,aAAa;QAAE,OAAO,aAAa;MACxC,KAAK,MAAM;QAAE,OAAO,MAAM;MAC1B,KAAK,UAAU;QAAE,OAAO,WAAW;MACnC;QAAS,OAAO,SAAS;IAC3B;EACF,CAAC,MAAM,IAAIF,QAAQ,KAAK,UAAU,EAAE;IAClC,QAAQC,KAAK,CAACC,WAAW,CAAC,CAAC;MACzB,KAAK,QAAQ;QAAE,OAAO,iBAAiB;MACvC,KAAK,MAAM;QAAE,OAAO,eAAe;MACnC,KAAK,QAAQ;QAAE,OAAO,iBAAiB;MACvC,KAAK,KAAK;QAAE,OAAO,cAAc;MACjC,KAAK,aAAa;QAAE,OAAO,aAAa;MACxC;QAAS,OAAO,aAAa;IAC/B;EACF,CAAC,MAAM;IACL,OAAO,MAAM,CAAC,CAAC;EACjB;AACF,CAAC;AAED,SAASC,MAAMA,CAAC;EAAEF,KAAK;EAAEG,OAAO;EAAEJ;AAAS,CAAC,EAAE;EAC5C,oBACEF,OAAA;IAAKO,SAAS,EAAC,QAAQ;IAAAC,QAAA,gBACrBR,OAAA;MAAIO,SAAS,EAAC,cAAc;MAAAC,QAAA,gBAC1BR,OAAA,CAACF,IAAI;QAACW,IAAI,EAAER,aAAa,CAACC,QAAQ,EAAEC,KAAK;MAAE;QAAAO,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EAC7CV,KAAK,eACNH,OAAA;QAAMO,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAEF,OAAO,CAACQ;MAAM;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpD,CAAC,EACJP,OAAO,CAACS,GAAG,CAACC,MAAM,iBACjBhB,OAAA,CAACH,IAAI;MAAiBmB,MAAM,EAAEA;IAAO,GAA1BA,MAAM,CAACC,EAAE;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAmB,CACxC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACK,EAAA,GAbQb,MAAM;AAef,eAAeA,MAAM;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}