{"ast":null,"code":"export const groupTickets = (tickets, grouping, users) => {\n  switch (grouping) {\n    case 'status':\n      return groupByStatus(tickets);\n    case 'user':\n      return groupByUser(tickets, users);\n    case 'priority':\n      return groupByPriority(tickets);\n    default:\n      return tickets;\n  }\n};\nexport const sortTickets = (groupedTickets, sorting) => {\n  const sortedGroups = {};\n  for (const [groupName, tickets] of Object.entries(groupedTickets)) {\n    sortedGroups[groupName] = tickets.sort((a, b) => {\n      if (sorting === 'priority') {\n        return b.priority - a.priority;\n      } else {\n        return a.title.localeCompare(b.title);\n      }\n    });\n  }\n  return sortedGroups;\n};\nconst groupByStatus = tickets => {\n  return tickets.reduce((acc, ticket) => {\n    acc[ticket.status] = [...(acc[ticket.status] || []), ticket];\n    return acc;\n  }, {});\n};\nconst groupByUser = (tickets, users) => {\n  const userMap = users.reduce((acc, user) => {\n    acc[user.id] = user.name;\n    return acc;\n  }, {});\n  return tickets.reduce((acc, ticket) => {\n    const userName = userMap[ticket.userId] || 'Unassigned';\n    acc[userName] = [...(acc[userName] || []), ticket];\n    return acc;\n  }, {});\n};\nconst groupByPriority = tickets => {\n  const priorityMap = {\n    4: 'Urgent',\n    3: 'High',\n    2: 'Medium',\n    1: 'Low',\n    0: 'No priority'\n  };\n  return tickets.reduce((acc, ticket) => {\n    const priority = priorityMap[ticket.priority];\n    acc[priority] = [...(acc[priority] || []), ticket];\n    return acc;\n  }, {});\n};","map":{"version":3,"names":["groupTickets","tickets","grouping","users","groupByStatus","groupByUser","groupByPriority","sortTickets","groupedTickets","sorting","sortedGroups","groupName","Object","entries","sort","a","b","priority","title","localeCompare","reduce","acc","ticket","status","userMap","user","id","name","userName","userId","priorityMap"],"sources":["C:/Users/AJ/Downloads/FE_Assignment/kanban-board/src/utils/helper.js"],"sourcesContent":["export const groupTickets = (tickets, grouping, users) => {\r\n    switch (grouping) {\r\n      case 'status':\r\n        return groupByStatus(tickets);\r\n      case 'user':\r\n        return groupByUser(tickets, users);\r\n      case 'priority':\r\n        return groupByPriority(tickets);\r\n      default:\r\n        return tickets;\r\n    }\r\n  };\r\n  \r\n  export const sortTickets = (groupedTickets, sorting) => {\r\n    const sortedGroups = {};\r\n    for (const [groupName, tickets] of Object.entries(groupedTickets)) {\r\n      sortedGroups[groupName] = tickets.sort((a, b) => {\r\n        if (sorting === 'priority') {\r\n          return b.priority - a.priority;\r\n        } else {\r\n          return a.title.localeCompare(b.title);\r\n        }\r\n      });\r\n    }\r\n    return sortedGroups;\r\n  };\r\n  \r\n  const groupByStatus = (tickets) => {\r\n    return tickets.reduce((acc, ticket) => {\r\n      acc[ticket.status] = [...(acc[ticket.status] || []), ticket];\r\n      return acc;\r\n    }, {});\r\n  };\r\n  \r\n  const groupByUser = (tickets, users) => {\r\n    const userMap = users.reduce((acc, user) => {\r\n      acc[user.id] = user.name;\r\n      return acc;\r\n    }, {});\r\n  \r\n    return tickets.reduce((acc, ticket) => {\r\n      const userName = userMap[ticket.userId] || 'Unassigned';\r\n      acc[userName] = [...(acc[userName] || []), ticket];\r\n      return acc;\r\n    }, {});\r\n  };\r\n  \r\n  const groupByPriority = (tickets) => {\r\n    const priorityMap = {\r\n      4: 'Urgent',\r\n      3: 'High',\r\n      2: 'Medium',\r\n      1: 'Low',\r\n      0: 'No priority'\r\n    };\r\n  \r\n    return tickets.reduce((acc, ticket) => {\r\n      const priority = priorityMap[ticket.priority];\r\n      acc[priority] = [...(acc[priority] || []), ticket];\r\n      return acc;\r\n    }, {});\r\n  };"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAGA,CAACC,OAAO,EAAEC,QAAQ,EAAEC,KAAK,KAAK;EACtD,QAAQD,QAAQ;IACd,KAAK,QAAQ;MACX,OAAOE,aAAa,CAACH,OAAO,CAAC;IAC/B,KAAK,MAAM;MACT,OAAOI,WAAW,CAACJ,OAAO,EAAEE,KAAK,CAAC;IACpC,KAAK,UAAU;MACb,OAAOG,eAAe,CAACL,OAAO,CAAC;IACjC;MACE,OAAOA,OAAO;EAClB;AACF,CAAC;AAED,OAAO,MAAMM,WAAW,GAAGA,CAACC,cAAc,EAAEC,OAAO,KAAK;EACtD,MAAMC,YAAY,GAAG,CAAC,CAAC;EACvB,KAAK,MAAM,CAACC,SAAS,EAAEV,OAAO,CAAC,IAAIW,MAAM,CAACC,OAAO,CAACL,cAAc,CAAC,EAAE;IACjEE,YAAY,CAACC,SAAS,CAAC,GAAGV,OAAO,CAACa,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAK;MAC/C,IAAIP,OAAO,KAAK,UAAU,EAAE;QAC1B,OAAOO,CAAC,CAACC,QAAQ,GAAGF,CAAC,CAACE,QAAQ;MAChC,CAAC,MAAM;QACL,OAAOF,CAAC,CAACG,KAAK,CAACC,aAAa,CAACH,CAAC,CAACE,KAAK,CAAC;MACvC;IACF,CAAC,CAAC;EACJ;EACA,OAAOR,YAAY;AACrB,CAAC;AAED,MAAMN,aAAa,GAAIH,OAAO,IAAK;EACjC,OAAOA,OAAO,CAACmB,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;IACrCD,GAAG,CAACC,MAAM,CAACC,MAAM,CAAC,GAAG,CAAC,IAAIF,GAAG,CAACC,MAAM,CAACC,MAAM,CAAC,IAAI,EAAE,CAAC,EAAED,MAAM,CAAC;IAC5D,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC;AAED,MAAMhB,WAAW,GAAGA,CAACJ,OAAO,EAAEE,KAAK,KAAK;EACtC,MAAMqB,OAAO,GAAGrB,KAAK,CAACiB,MAAM,CAAC,CAACC,GAAG,EAAEI,IAAI,KAAK;IAC1CJ,GAAG,CAACI,IAAI,CAACC,EAAE,CAAC,GAAGD,IAAI,CAACE,IAAI;IACxB,OAAON,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,OAAOpB,OAAO,CAACmB,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;IACrC,MAAMM,QAAQ,GAAGJ,OAAO,CAACF,MAAM,CAACO,MAAM,CAAC,IAAI,YAAY;IACvDR,GAAG,CAACO,QAAQ,CAAC,GAAG,CAAC,IAAIP,GAAG,CAACO,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAEN,MAAM,CAAC;IAClD,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC;AAED,MAAMf,eAAe,GAAIL,OAAO,IAAK;EACnC,MAAM6B,WAAW,GAAG;IAClB,CAAC,EAAE,QAAQ;IACX,CAAC,EAAE,MAAM;IACT,CAAC,EAAE,QAAQ;IACX,CAAC,EAAE,KAAK;IACR,CAAC,EAAE;EACL,CAAC;EAED,OAAO7B,OAAO,CAACmB,MAAM,CAAC,CAACC,GAAG,EAAEC,MAAM,KAAK;IACrC,MAAML,QAAQ,GAAGa,WAAW,CAACR,MAAM,CAACL,QAAQ,CAAC;IAC7CI,GAAG,CAACJ,QAAQ,CAAC,GAAG,CAAC,IAAII,GAAG,CAACJ,QAAQ,CAAC,IAAI,EAAE,CAAC,EAAEK,MAAM,CAAC;IAClD,OAAOD,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AACR,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}